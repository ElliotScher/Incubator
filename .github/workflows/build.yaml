name: Build, Package & Publish apt repo

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-linux:
    runs-on: ubuntu-22.04-arm

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Get version info
        id: version
        run: |
          VERSION="1.0.0-$(date +'%Y%m%d%H%M%S')"
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Run build script (PyInstaller)
        run: ./build.sh

      - name: Package .deb
        run: |
          APP_NAME="incubator"
          VERSION="${{ steps.version.outputs.VERSION }}"
          ARCH="arm64"

          mkdir -p debpkg/usr/local/bin
          cp dist/main debpkg/usr/local/bin/$APP_NAME
          chmod +x debpkg/usr/local/bin/$APP_NAME

          mkdir -p debpkg/DEBIAN
          cat <<EOF > debpkg/DEBIAN/control
          Package: $APP_NAME
          Version: $VERSION
          Section: utils
          Priority: optional
          Architecture: $ARCH
          Maintainer: Your Name <you@example.com>
          Description: PyInstaller-built $APP_NAME binary for Raspberry Pi
          EOF

          dpkg-deb --build debpkg ${APP_NAME}_${VERSION}_${ARCH}.deb

      - name: Prepare apt repo structure
        run: |
          mkdir -p apt-repo/pool/main/i/incubator
          cp incubator_${{ steps.version.outputs.VERSION }}_arm64.deb apt-repo/pool/main/i/incubator/

      - name: Create Packages.gz index
        run: |
          cd apt-repo
          mkdir -p dists/stable/main/binary-arm64
          dpkg-scanpackages pool /dev/null | gzip -9c > dists/stable/main/binary-arm64/Packages.gz

      - name: Install apt-utils (for apt-ftparchive)
        run: sudo apt-get update && sudo apt-get install -y apt-utils

      - name: Generate Release file
        run: |
          cd apt-repo
          apt-ftparchive \
            -o APT::FTPArchive::Release::Codename=stable \
            release dists/stable > dists/stable/Release
      - name: Commit and push apt repo to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./apt-repo
          publish_branch: gh-pages
